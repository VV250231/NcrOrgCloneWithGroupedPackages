<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <assignments>
        <name>Add_Account_LookUp_Account_Country_Code_0</name>
        <label>Add Account LookUp &amp; Account Country Code</label>
        <locationX>2866</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Opportunity_Name__r.AccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Country_Code__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Account.Account_Country_Code__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Checking_Is_there_an_install_date_value</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_Account_LookUp_Account_Country_Code_0_0</name>
        <label>Add Account LookUp &amp; Account Country Code</label>
        <locationX>3130</locationX>
        <locationY>671</locationY>
        <assignmentItems>
            <assignToReference>$Record.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Opportunity_Name__r.AccountId</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Country_Code__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Account.Account_Country_Code__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Checking_Is_there_an_install_date_value</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>AssignDaManager</name>
        <label>AssignDaManager</label>
        <locationX>336</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.DisputeAnalyst__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetDisputeUser.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.DA_Manager__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>GetDisputeUser.Manager.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Blank_ROR_Created_Date</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Change_case_status_to_open</name>
        <label>Change case status to open</label>
        <locationX>1018</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Checking_Is_there_an_install_date_value</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Change_case_status_to_submitted</name>
        <label>Change case status to submitted</label>
        <locationX>754</locationX>
        <locationY>431</locationY>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Submitted</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Escalate_Case</name>
        <label>Escalate Case</label>
        <locationX>1546</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.IsEscalated</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>First_Contact_Field_Update</name>
        <label>First Contact Field Update</label>
        <locationX>4626</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.First_Contact_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>TimeNowformula</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Populate_Case_Account_from_Opportunity</name>
        <label>Populate Case Account from Opportunity</label>
        <locationX>2074</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Opportunity_Name__r.AccountId</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Populate_CCAD_Dispute_Nbr</name>
        <label>Populate CCAD Dispute Nbr</label>
        <locationX>50</locationX>
        <locationY>1367</locationY>
        <assignmentItems>
            <assignToReference>$Record.CCAD_Dispute_Nbr__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.CaseNumber</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Checking_Is_there_an_install_date_value</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>We are adding this condition to populate account and opportunity on case when we are creating case from quote.</description>
        <name>Populate_opportunity_and_account_from_quote</name>
        <label>Populate opportunity and account from quote</label>
        <locationX>2338</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.cpq_Quote__r.SBQQ__Account__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Opportunity_Name__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.cpq_Quote__r.SBQQ__Opportunity2__c</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Populate_ROR_Created_Date</name>
        <label>Populate ROR Created Date</label>
        <locationX>204</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>$Record.ROR_Created_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.CreatedDate</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Check_Blank_CCAD_Dispute_Number</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Case_Reason_CPQ</name>
        <label>Set Case Reason - CPQ</label>
        <locationX>1810</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.Reason</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>CPQ</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Case_Status_Escalated</name>
        <label>Set Case Status=Escalated</label>
        <locationX>3570</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Escalated</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Set_Contract_in_CFS_to_In_Review</name>
        <label>Set Contract in CFS to In Review</label>
        <locationX>3141</locationX>
        <locationY>1895</locationY>
        <assignmentItems>
            <assignToReference>$Record.Contract_in_CFS__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>In Review</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_Case_Status_to_Assigned</name>
        <label>Update Case Status to Assigned</label>
        <locationX>1282</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Assigned</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>$Record.Assign_To_Support_Rep__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_Child_case_escalate_date_field</name>
        <label>Update Child case escalate date field</label>
        <locationX>4098</locationX>
        <locationY>551</locationY>
        <assignmentItems>
            <assignToReference>$Record.Child_Case_Escalated_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Child_Case_Escalated_Date_formula</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_detractor_escalate_case_date</name>
        <label>Update detractor escalate case date</label>
        <locationX>5154</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>$Record.Detractor_Case_Escalated_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Detractor_escalate_date_formula</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_Immediate_Detractor_Case_Escalated_Date</name>
        <label>Update Immediate Detractor Case Escalated Date</label>
        <locationX>4890</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>$Record.Immediate_Detractor_Case_Escalated_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>for_immediate_formula</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Update_immediate_detractor_escalate_date</name>
        <label>Update immediate detractor escalate date</label>
        <locationX>5418</locationX>
        <locationY>791</locationY>
        <assignmentItems>
            <assignToReference>$Record.Immediate_Detractor_Case_Escalated_Date__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>immediate_detractor_escalate_formula</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <decisions>
        <name>Check_Blank_CCAD_Dispute_Number</name>
        <label>Check Blank CCAD Dispute Number</label>
        <locationX>336</locationX>
        <locationY>1007</locationY>
        <defaultConnectorLabel>Else</defaultConnectorLabel>
        <rules>
            <name>Blank_CCAD_Dispute_Number</name>
            <conditionLogic>1 AND 2</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.CCAD_Dispute_Nbr__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Dispute_Config</targetReference>
            </connector>
            <label>Blank CCAD Dispute Number</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Blank_ROR_Created_Date</name>
        <label>Check Blank ROR Created Date</label>
        <locationX>336</locationX>
        <locationY>671</locationY>
        <defaultConnector>
            <targetReference>Check_Blank_CCAD_Dispute_Number</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Else</defaultConnectorLabel>
        <rules>
            <name>Blank_ROR_Created_Date</name>
            <conditionLogic>1 AND 2</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ROR_Created_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_ROR_Created_Date</targetReference>
            </connector>
            <label>Blank ROR Created Date</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Case_field_Changes</name>
        <label>Check Case field Changes</label>
        <locationX>1942</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Else</defaultConnectorLabel>
        <rules>
            <name>If_Owner_Changed_from_Queue_to_User</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>00G</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.OwnerId</leftValueReference>
                <operator>StartsWith</operator>
                <rightValue>
                    <stringValue>005</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Assign_To_Support_Rep__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Case_Status_to_Assigned</targetReference>
            </connector>
            <label>If Owner Changed from Queue to User</label>
        </rules>
        <rules>
            <name>If_Status_Changed_to_Escalated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Escalated</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Escalate_Case</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>If Status Changed to Escalated</label>
        </rules>
        <rules>
            <name>if_SF_Global_Support_AAS_case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Origin</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Email</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Owner:Group.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>AAS Support Case Queue</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Case_Reason_CPQ</targetReference>
            </connector>
            <label>if SF Global Support AAS case</label>
        </rules>
        <rules>
            <name>Populate_Account_Name_for_New_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Opportunity_Name__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Opportunity_Name__r.AccountId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_Case_Account_from_Opportunity</targetReference>
            </connector>
            <label>Populate Account Name for New Case</label>
        </rules>
        <rules>
            <name>Populate_Account_And_Opp_for_New_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.cpq_Quote__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.AccountId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.cpq_Quote__r.SBQQ__Account__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Opportunity_Name__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.cpq_Quote__r.SBQQ__Opportunity2__c</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_opportunity_and_account_from_quote</targetReference>
            </connector>
            <label>Populate Account And Opp for New Case</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Case_Record_Type</name>
        <label>Check Case Record Type</label>
        <locationX>3273</locationX>
        <locationY>311</locationY>
        <defaultConnector>
            <targetReference>Checking_Is_there_an_install_date_value</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Dispute_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>DisputeCaseRecordType</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetDisputeUser</targetReference>
            </connector>
            <label>If Dispute Case</label>
        </rules>
        <rules>
            <name>If_IPT_partner_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>IPT Partner</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Change_case_status_to_submitted</targetReference>
            </connector>
            <label>If IPT partner Case</label>
        </rules>
        <rules>
            <name>If_MACC_Live_Chat_Cases</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MACC Live Chat Cases</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Open</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Change_case_status_to_open</targetReference>
            </connector>
            <label>If MACC Live Chat Cases</label>
        </rules>
        <rules>
            <name>If_SF_Global_Support_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SF Global Support</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Check_Case_field_Changes</targetReference>
            </connector>
            <label>If SF Global Support Case</label>
        </rules>
        <rules>
            <name>If_Deals_Desk_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Deals Desk</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_Created</targetReference>
            </connector>
            <label>If Deals Desk Case</label>
        </rules>
        <rules>
            <name>If_Customer_Success_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Customer Success Team</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Is_Case_Escalated</targetReference>
            </connector>
            <label>If Customer Success Case</label>
        </rules>
        <rules>
            <name>if_follow_up_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Follow-up</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>is_case_status_new</targetReference>
            </connector>
            <label>if Follow-up Case</label>
        </rules>
        <rules>
            <name>if_Close_the_Loop_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Close the Loop</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>if_status_equals_Contact_Completed</targetReference>
            </connector>
            <label>if Close the Loop Case</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_Dispute_ROR_System</name>
        <label>Check Dispute ROR System</label>
        <locationX>182</locationX>
        <locationY>1247</locationY>
        <defaultConnector>
            <targetReference>Checking_Is_there_an_install_date_value</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Else</defaultConnectorLabel>
        <rules>
            <name>SF</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Dispute_Config.Dispute_ROR_System__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SF</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Populate_CCAD_Dispute_Nbr</targetReference>
            </connector>
            <label>SF</label>
        </rules>
    </decisions>
    <decisions>
        <name>Checking_Is_there_an_install_date_value</name>
        <label>Checking Is there an install date value</label>
        <locationX>3273</locationX>
        <locationY>1775</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>If_Is_there_an_install_date_not_null</name>
            <conditionLogic>(1 OR 4) AND (2 OR 3) AND (5 OR 6)</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.Is_there_an_install_date__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.Is_there_an_install_date__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Is_there_an_install_date__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Yes</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Is_there_an_install_date__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.All_entitled_products_assigned_a_site__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.All_entitled_products_assigned_a_site__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.All_entitled_products_assigned_a_site__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Yes</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.All_entitled_products_assigned_a_site__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>No</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Contract_in_CFS_to_In_Review</targetReference>
            </connector>
            <label>If Is there an install date not null</label>
        </rules>
    </decisions>
    <decisions>
        <name>For_type_field</name>
        <label>For type field</label>
        <locationX>5286</locationX>
        <locationY>671</locationY>
        <defaultConnectorLabel>else</defaultConnectorLabel>
        <rules>
            <name>if_immediate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Immediate</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Immediate_Detractor_Case_Escalated_Date</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>if immediate</label>
        </rules>
        <rules>
            <name>if_detractor</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Detractor</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_detractor_escalate_case_date</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>if detractor</label>
        </rules>
        <rules>
            <name>if_immediate_detractor</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Immediate Detractor</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_immediate_detractor_escalate_date</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>if immediate detractor</label>
        </rules>
    </decisions>
    <decisions>
        <name>if_status_equals_Contact_Completed</name>
        <label>if status equals Contact Completed</label>
        <locationX>5121</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>if_Status_new</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>else</defaultConnectorLabel>
        <rules>
            <name>if_contact_completed</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Contact Completed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Close the Loop</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>First_Contact_Field_Update</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>if contact completed</label>
        </rules>
    </decisions>
    <decisions>
        <name>if_Status_new</name>
        <label>if Status new</label>
        <locationX>5616</locationX>
        <locationY>551</locationY>
        <defaultConnectorLabel>else</defaultConnectorLabel>
        <rules>
            <name>if_status_is_true</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Close the Loop</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>For_type_field</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>if status is true</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Case_Escalated</name>
        <label>Is Case Escalated ?</label>
        <locationX>3702</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>yes2</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.IsEscalated</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Case_Status_Escalated</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>is_case_status_new</name>
        <label>is case status new?</label>
        <locationX>4230</locationX>
        <locationY>431</locationY>
        <defaultConnectorLabel>Else</defaultConnectorLabel>
        <rules>
            <name>if_true</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>New</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Follow-up</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Child_case_escalate_date_field</targetReference>
            </connector>
            <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
            <label>if true</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Created</name>
        <label>Is Created ?</label>
        <locationX>3064</locationX>
        <locationY>431</locationY>
        <defaultConnector>
            <targetReference>Opportunity_LookUp_is_not_null</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Opportunity_Name__r.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Account_LookUp_Account_Country_Code_0</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>Opportunity_LookUp_is_not_null</name>
        <label>Opportunity LookUp is not null</label>
        <locationX>3262</locationX>
        <locationY>551</locationY>
        <defaultConnector>
            <targetReference>Checking_Is_there_an_install_date_value</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Opportunity_Name__r.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Opportunity_Name__r.Id</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_Account_LookUp_Account_Country_Code_0_0</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>This Flow will execute in before context please se this flow to populate the value in before context.
use this flow only for the before context.

Migrated workflows to this flow:
1.First Contact Field Update on Contact Completed
2. Notify Child Case Owner And CSM
3. Escalate Case For Immediate Type
4. Escalate Case For Immediate Detractor Type
5. Escalate Case For Detractor Type

Added changes for EBA_SF-1786 - SF Global Case Support Process Notifications
Added changes for EBA_SF-1674 - SF Optimization: Migrating Workflow Rules to Flow (VOC- Email) - Case Part 4</description>
    <environments>Default</environments>
    <formulas>
        <name>Child_Case_Escalated_Date_formula</name>
        <dataType>DateTime</dataType>
        <expression>IF(
WEEKDAY(DATEVALUE(Now())) = 1,
(Now()- (1/24)) + 8,
IF(WEEKDAY(DATEVALUE(Now())) = 7, (Now()- (1/24)) + 9,(Now()- (1/24))+7)
)</expression>
    </formulas>
    <formulas>
        <name>Detractor_escalate_date_formula</name>
        <dataType>DateTime</dataType>
        <expression>IF(
WEEKDAY(DATEVALUE(Now())) = 1,
(Now()- (1/24)) + 8,
IF(WEEKDAY(DATEVALUE(Now())) = 7, (Now()- (1/24)) + 9,(Now()- (1/24))+7)
)</expression>
    </formulas>
    <formulas>
        <name>for_immediate_formula</name>
        <dataType>DateTime</dataType>
        <expression>IF(
OR(WEEKDAY(DATEVALUE(Now())) = 5,WEEKDAY(DATEVALUE(Now())) = 6, WEEKDAY(DATEVALUE(Now())) = 7),
Now() + 4,
IF(WEEKDAY(DATEVALUE(Now())) = 1 , Now() + 3, Now()+2)
)</expression>
    </formulas>
    <formulas>
        <name>immediate_detractor_escalate_formula</name>
        <dataType>DateTime</dataType>
        <expression>IF(
OR(WEEKDAY(DATEVALUE((Now()))) = 5,WEEKDAY(DATEVALUE(Now())) = 6, WEEKDAY(DATEVALUE(Now())) = 7),
(Now()- (1/24)) + 4,
IF(WEEKDAY(DATEVALUE(Now())) = 1 , (Now()- (1/24)) + 3, (Now()- (1/24))+2)
)</expression>
    </formulas>
    <formulas>
        <description>Calculating Remaining Months of Contract</description>
        <name>RemainingMonthsofContract</name>
        <dataType>Number</dataType>
        <expression>{!$Record.Total_Months_on_Contract__c} -  (MONTH(Today()) - MONTH({!$Record.Contract_Begin_Date__c}) )</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <name>TimeNowformula</name>
        <dataType>DateTime</dataType>
        <expression>NOW()</expression>
    </formulas>
    <interviewLabel>Case Before Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case Before Flow</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Dispute_Config</name>
        <label>Get Dispute Config</label>
        <locationX>182</locationX>
        <locationY>1127</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_Dispute_ROR_System</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Org_Config</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CCAD_Config__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>GetDisputeUser</name>
        <label>GetDisputeUser</label>
        <locationX>336</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssignDaManager</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Quicklook_ID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Dispute_Analyst_Name__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>ManagerId</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>3147</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_Case_Record_Type</targetReference>
        </connector>
        <object>Case</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>DisputeCaseRecordType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Dispute</stringValue>
        </value>
    </variables>
</Flow>
