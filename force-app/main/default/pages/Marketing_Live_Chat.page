<apex:page ShowHeader="false" sidebar="false" standardStylesheets="false">
  <style type='text/css'>
    .embeddedServiceHelpButton .helpButton .uiButton {
        background-color: #54B948;
        font-family: "Salesforce Sans", sans-serif;
    }
    .embeddedServiceHelpButton .helpButton .uiButton:focus {
        outline: 1px solid #54B948;
    }
    @font-face {
        font-family: 'Salesforce Sans';
        src: url('https://www.sfdcstatic.com/system/shared/common/assets/fonts/SalesforceSans/SalesforceSans-Regular.woff') format('woff'),
        url('https://www.sfdcstatic.com/system/shared/common/assets/fonts/SalesforceSans/SalesforceSans-Regular.ttf') format('truetype');
    }
</style>

<script type='text/javascript' src='https://service.force.com/embeddedservice/5.0/esw.min.js'></script>
<script type='text/javascript'>
    var initESW = function(gslbBaseURL) {
        embedded_svc.settings.displayHelpButton = true; //Or false
        embedded_svc.settings.language = ''; //For example, enter 'en' or 'en-US'

        //embedded_svc.settings.defaultMinimizedText = '...'; //(Defaults to Chat with an Expert)
        //embedded_svc.settings.disabledMinimizedText = '...'; //(Defaults to Agent Offline)

        //embedded_svc.settings.loadingText = ''; //(Defaults to Loading)
        //embedded_svc.settings.storageDomain = 'yourdomain.com'; //(Sets the domain for your deployment so that visitors can navigate subdomains during a chat session)

        // Settings for Chat
        //embedded_svc.settings.directToButtonRouting = function(prechatFormData) {
            // Dynamically changes the button ID based on what the visitor enters in the pre-chat form.
            // Returns a valid button ID.
        //};
        //embedded_svc.settings.prepopulatedPrechatFields = {}; //Sets the auto-population of pre-chat form fields
        embedded_svc.settings.extraPrechatFormDetails = [
                {"label":"Last Name",
                 "transcriptFields": ["Chat_Last_Name__c"],
                 "displayToAgent":true
                 
                },
                {"label":"First Name",
                 "transcriptFields": ["Chat_First_Name__c"],
                 "displayToAgent":true
                 
                },
                {"label":"Email",
                 "transcriptFields": ["Chat_Email__c"],
                 "displayToAgent":true
                 
                },
                {"label":"Phone",
                 "transcriptFields": ["Chat_Phone__c"],
                 "displayToAgent":true
                 
                },
                {"label":"Subject",
                 "transcriptFields": ["Chat_Subject__c"],
                 "displayToAgent":true
                 
                }
            ];
            embedded_svc.settings.extraPrechatInfo = [
                {
                    "entityName": "Lead",
                    "entityFieldMaps": [{
                        "doCreate": false,
                        "doFind": false,
                        "fieldName": "LastName",
                        "isExactMatch": false,
                        "label": "Last Name"
                    }, {
                        "doCreate": false,
                        "doFind": false,
                        "fieldName": "FirstName",
                        "isExactMatch": false,
                        "label": "First Name"
                    }, {
                        "doCreate": false,
                        "doFind": true,
                        "fieldName": "Email",
                        "isExactMatch": true,
                        "label": "Email"
                    }],
                    "saveToTranscript": "Lead",
                    "showOnCreate": true
                },{
                    "entityName": "Contact",
                    "entityFieldMaps": [{
                        "doCreate": false,
                        "doFind": false,
                        "fieldName": "LastName",
                        "isExactMatch": false,
                        "label": "Last Name"
                    }, {
                        "doCreate": false,
                        "doFind": false,
                        "fieldName": "FirstName",
                        "isExactMatch": false,
                        "label": "First Name"
                    }, {
                        "doCreate": false,
                        "doFind": true,
                        "fieldName": "Email",
                        "isExactMatch": true,
                        "label": "Email"
                    }],
                    "saveToTranscript": "ContactId",
                    "showOnCreate": true
                    
              }
                , {
                    "entityName": "Case",
                    //"saveToTranscript": "Case",
                    "entityFieldMaps": [{
                        "isExactMatch": false,
                        "fieldName": "Subject",
                        "doCreate": false,
                        "doFind": false,
                        "label": "Subject"
                    }, {
                        "isExactMatch": false,
                        "fieldName": "Status",
                        "doCreate": false,
                        "doFind": false,
                        "label": "Status"
                    },
                     {
                        "isExactMatch": true,
                        "fieldName": "Chat_User_Email__c",
                        "doCreate": false,
                        "doFind": true,
                        "label": "Email"
                    },                   
                      {
                        "isExactMatch": false,
                        "fieldName": "Origin",
                        "doCreate": false,
                        "doFind": false,
                        "label": "Origin"
                    }] 
                }];
        //embedded_svc.settings.fallbackRouting = []; //An array of button IDs, user IDs, or userId_buttonId
        //embedded_svc.settings.offlineSupportMinimizedText = '...'; //(Defaults to Contact Us)

        embedded_svc.settings.enabledFeatures = ['LiveAgent'];
        embedded_svc.settings.entryFeature = 'LiveAgent';

        embedded_svc.init(
            'https://ncr.my.salesforce.com',
            'https://ncrpresalesfundrequest.secure.force.com',
            gslbBaseURL,
            '00D700000008mDk',
            'Marketing_Live_Agents_Lightning',
            {
                baseLiveAgentContentURL: 'https://c.la4-c2-phx.salesforceliveagent.com/content',
                deploymentId: '5720g0000004CbE',
                buttonId: '5730g000000Gn7L',
                baseLiveAgentURL: 'https://d.la4-c2-phx.salesforceliveagent.com/chat',
                eswLiveAgentDevName: 'EmbeddedServiceLiveAgent_Parent04I0g000000XZAMEA4_16bdfeb228e',
                isOfflineSupportEnabled: false
            }
        );
    };

    if (!window.embedded_svc) {
        var s = document.createElement('script');
        s.setAttribute('src', 'https://ncr.my.salesforce.com/embeddedservice/5.0/esw.min.js');
        s.onload = function() {
            initESW(null);
        };
        document.body.appendChild(s);
    } else {
        initESW('https://service.force.com');
    }
</script>
</apex:page>